C51 COMPILER V9.59.0.0   ACCESCAN                                                          10/20/2021 16:01:04 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ACCESCAN
OBJECT MODULE PLACED IN .\Objects\Accescan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Accescan.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\vrfcdor_impresora) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\Accescan.lst) TABS(2) OBJECT(.\Objects\Accescan.obj)

line level    source

   1          #include <Accescan.h>
   2          #include <reg51.h>
   3          #include <string.h>
   4          extern void Block_write_clock_ascii(unsigned char *datos_clock);
   5          extern void PantallaLCD(unsigned char cod_msg);
   6          extern void Reloj_Pantalla_Lcd();
   7          extern unsigned char rx_Data(void);
   8          extern void Debug_txt_Tibbo(unsigned char * str);
   9          extern void DebugBufferMF(unsigned char *str,unsigned char num_char,char io);
  10          extern void Debug_Dividir_texto();
  11          extern void tx_aux(unsigned char caracter);
  12          extern unsigned char Dir_board();
  13          extern void Block_read_clock_ascii(unsigned char *datos_clock);
  14          extern void Two_ByteHex_Decimal(unsigned char *buffer,unsigned char id_h,unsigned char id_l);
  15          extern void ByteHex_Decimal(unsigned char *buffer,unsigned char valorhex);
  16          extern void PantallaLCD(unsigned char cod_msg);
  17          extern void LCD_txt (unsigned char * msg,char enable_char_add );
  18          extern unsigned char  ValidaSensoresPaso(void);
  19          extern void tx_aux(unsigned char caracter);
  20          extern void PantallaLCD_LINEA_2(unsigned char cod_msg, unsigned char *buffer);
  21          extern unsigned char hex_bcd (unsigned char byte);
  22          extern void Trama_pto_Paralelo_P(unsigned char *buffer_S1_B0,unsigned char *buffer_S1_B2,unsigned char cmd
             -);
  23          extern void  send_port(unsigned char *buffer_port, unsigned char length_char);
  24          extern void graba_serie(unsigned char *buffer);
  25          extern void graba_serie_ascii_hex(unsigned char *buffer);
  26          unsigned char rd_eeprom (unsigned char control,unsigned int Dir); 
  27          extern unsigned long int  Leer_serie ();
  28          extern void serie_ascii_siceros_l(unsigned char *serie);
  29          extern void Cmd_LPR_Salida_wiegand(unsigned char *buffer);
  30          extern void send_portERR(unsigned char cod_err);
  31          extern void confirmacion();
  32          
  33          extern unsigned char Timer_wait;
  34          extern unsigned char Tipo_Vehiculo;
  35          extern unsigned char USE_LPR;
  36          extern unsigned char  Debug_Tibbo;
  37          extern unsigned char xdata Buffer_Tibbo_rx[];
  38          extern unsigned char ValTimeOutCom;   
  39          extern unsigned char g_cEstadoImpresion;
  40          
  41          sbit rx_ip = P0^0;        
  42          sbit lock = P1^7;           //Relevo 
  43          sbit Atascado = P0^3;       //Rele de on/off del verificador o transporte
  44          sbit led_err_imp = P0^2;      //Error   
  45          
  46          #define AUDIO_ENTER             0XA1    // RELE 2
  47          
  48          #define STX                     02 
  49          #define ETX                     03 
  50          #define FUERA_DE_LINEA          0xb6
  51          #define ON_LINE                 0xAA
  52          
  53          /*mensajes de pantalla*/
C51 COMPILER V9.59.0.0   ACCESCAN                                                          10/20/2021 16:01:04 PAGE 2   

  54          #define BIENVENIDO              0XFE
  55          #define NO_PAGO                 0XE7
  56          #define LECTURA_WIEGAND         0xB0      
  57          #define GRACIAS                 0XFF
  58          
  59          #define PRMR_GRACIAS            0X01
  60          #define GRACIA_SOFTWARE         0XFF
  61          #define PRMR_BIENVENIDO         0X02
  62          #define BIENVENIDO_SOFTWARE     0XFE
  63          #define PRMR_NO_REGISTRADO      0X04
  64          #define NO_REGISTRA             04
  65          #define PRMR_EXCEDE_HORARIO     07
  66          #define EXCEDE_HORARIO          07
  67          #define PRMR_DIRIJASE_A_CAJA    0X09
  68          #define UN_MOMENTO              0x09
  69          #define SIN_PAGO                90
  70          #define ERROR_LOOP              0xe0
  71          #define PRMR_MSJ_EXCLUSIVO          0X55
  72          
  73          
  74          #define SEQ_REINTENTO         0X05
  75          #define   TIME_PLACA        55
  76          #define SEQ_CMNCCN_PTO        0X04
  77          
  78          //unsigned char S1_B2[]={0x13, 0x03, 0x1D, 0x0B, 0x0E, 00, 00, 00, 00, 00, 0x01, 0x13, 0x03, 0x1D, 0x0E, 0
             -x1D};
  79          //unsigned char S1_B0[]={0x32, 0x31, 0x30, 0x37, 0x31, 0x35, 00, 00, 00, 00, 00, 00, 00, 00, 00, 01};
  80          //unsigned char S_B[]={0xE7, 00, 00, 00, 00, 00, 00, 00, 00, 00, 01};
  81          /*------------------------------------------------------------------------------
  82          Rutina q valida los cmd del pto paralelo
  83          ------------------------------------------------------------------------------*/
  84          void Valida_Trama_Pto(unsigned char *buffer, unsigned char length_trama)
  85          {
  86   1         unsigned char buff[11];
  87   1        /*-------------------------------CMD H reloj para el board y la pantalla lcd-----------------------------
             --------------*/
  88   1          if((length_trama==25)&&(*buffer==STX)&&(*(buffer+2)=='H')&&*(buffer+(length_trama-1))==ETX)                         
             -/*cmd de Accescan que me envia el reloj actualizado*/
  89   1          { 
  90   2            
  91   2            Block_write_clock_ascii(buffer+3);                                                                                /* se escribe el reloj de har
             -dware*/
  92   2          
  93   2            Reloj_Pantalla_Lcd();                                                                                             /* Escribo el reloj en la pantalla 
             -lcd*/
  94   2          
  95   2          }
  96   1          /*-------------------------------CMD B6 fuera de linea -------------------------------------------------
             -------------*/
  97   1          else if(*buffer==FUERA_DE_LINEA)                                                                                    /*cmd de Accescan que dice q e
             -sta fuera de linea*/
  98   1          {
  99   2            if (Timer_wait>=20)                                                                                               /* se envia el msj fuera de linea*/
 100   2            {                                                                                                                 /* con un tiempo de retardo =((1/(22118400/12
             -)*65535)*30)*/
 101   3              PantallaLCD(FUERA_DE_LINEA);
 102   3              led_err_imp=0;                                                                                                  /*error led on*/
 103   3              Timer_wait=0;
 104   3              lock=0;                                                                                                         /*relevo off despues de 1 minuto*/
 105   3              Atascado=0;
 106   3              //ValTimeOutCom=10;       
 107   3            }
C51 COMPILER V9.59.0.0   ACCESCAN                                                          10/20/2021 16:01:04 PAGE 3   

 108   2            if ((Debug_Tibbo==0)&&(USE_LPR==1))
 109   2              {
 110   3              Debug_Tibbo=1;
 111   3              Debug_txt_Tibbo((unsigned char *) "LIVE\n");
 112   3            
 113   3              Debug_Tibbo=0;
 114   3              }
 115   2          }
 116   1          /*-------------------------------CMD AA en linea -------------------------------------------------------
             ------------*/
 117   1          else if (*buffer==ON_LINE)                                                                                          /*en linea*/
 118   1          {
 119   2            
 120   2            if (Timer_wait>=20)                                                                                               /* se envia el msj fuera de linea*/
 121   2            { 
 122   3              Timer_wait=0;                                                                                                   /*se inicia el timer*/
 123   3              lock=0;
 124   3              led_err_imp=1;                                                                                                  /*relevo off despues de 1 minuto*/
 125   3              Atascado=0; 
 126   3              //ValTimeOutCom=10;
 127   3              if ((Debug_Tibbo==0)&&(USE_LPR==1))
 128   3              {
 129   4              Debug_Tibbo=1;
 130   4              Debug_txt_Tibbo((unsigned char *) "LIVE\n");
 131   4              
 132   4              Debug_Tibbo=0;
 133   4              }
 134   3            }
 135   2            
 136   2          } 
 137   1      
 138   1                            /*--------------gracias 01 -----------------------------------*/
 139   1          else if ((length_trama==1)&&(*buffer==PRMR_GRACIAS))                                                                        /*cmd 0xA1 audio
             - caja que es igual a no registra pago */
 140   1          {
 141   2               PantallaLCD(GRACIA_SOFTWARE);
 142   2          }
 143   1        
 144   1                              /*--------------Bienvenido 02 -----------------------------------*/
 145   1          else if ((length_trama==1)&&(*buffer==PRMR_BIENVENIDO))                                                                       /*cmd 0xA1 au
             -dio caja que es igual a no registra pago */
 146   1          {
 147   2               PantallaLCD(BIENVENIDO_SOFTWARE);
 148   2          }
 149   1                          /*--------------No registrado 04 -----------------------------------*/
 150   1          else if ((length_trama==1)&&(*buffer==PRMR_NO_REGISTRADO))                                                                        /*cmd 0xA1
             - audio caja que es igual a no registra pago */
 151   1          {
 152   2               PantallaLCD(NO_REGISTRA);
 153   2          }
 154   1                            /* EXCEDE HORARIO  07*/
 155   1          else if ((length_trama==1)&&(*buffer==PRMR_EXCEDE_HORARIO))                                                                       /*cmd 0xA
             -1 audio caja que es igual a no registra pago */
 156   1          {
 157   2               PantallaLCD(EXCEDE_HORARIO);
 158   2          }
 159   1                        /*--------------CMD 0x9 msj sin pago-----------------------------*/
 160   1          else if ((length_trama==1)&&(*buffer==PRMR_DIRIJASE_A_CAJA))                                                                        /*cmd 0x
             -A1 audio caja que es igual a no registra pago */
 161   1          {
 162   2               PantallaLCD(UN_MOMENTO);
 163   2          }
C51 COMPILER V9.59.0.0   ACCESCAN                                                          10/20/2021 16:01:04 PAGE 4   

 164   1                        /*--------------CMD 0xE7 msj NO pago-----------------------------*/
 165   1          else if ((length_trama==1)&&(*buffer==NO_PAGO))                                                                       /*cmd 0xA1 audio caja
             - que es igual a no registra pago */
 166   1          {
 167   2               PantallaLCD(NO_PAGO);
 168   2          }
 169   1              /*------------------------------- CMD 55 PRMR_MSJ_EXCLUSIVO  -----------------------------------------
             --------------------------*/
 170   1          else if ((length_trama==3)&&(*(buffer+1)==PRMR_MSJ_EXCLUSIVO)&&*(buffer+(length_trama-1))==ETX)                 
             -                                                      /* */
 171   1          {
 172   2               confirmacion();                                                                                            /*mesualidad vencida*/
 173   2          } 
 174   1                        /*------------msj bienvenido--------------------------*/
 175   1          else if ((length_trama==19)&&(*buffer==STX)&&(*(buffer+1)=='O')&&*(buffer+(length_trama-1))==ETX)             
             -      /*mensaje de bienvenidos*/
 176   1          {
 177   2            PantallaLCD(BIENVENIDO);
 178   2          }
 179   1                      /*--------------cmd "V" msj Gracias y nombre del mensual-----------------------------*/
 180   1          else if ((length_trama==19)&&(*buffer==STX)&&(*(buffer+1)=='V')&&*(buffer+(length_trama-1))==ETX)
 181   1          {
 182   2            
 183   2             *(buffer+(length_trama-1))=0;
 184   2             PantallaLCD_LINEA_2(GRACIAS,buffer+2);                                                                     /*SE ENVIA EL MSJ GRACIAS lo 
             -q envia el software*/
 185   2          
 186   2          
 187   2            length_trama=0;
 188   2            lock=1;   
 189   2            Timer_wait=10;  
 190   2            send_portERR(AUDIO_ENTER);
 191   2            ValTimeOutCom=TIME_PLACA;
 192   2            g_cEstadoImpresion=SEQ_CMNCCN_PTO ;     
 193   2          
 194   2            
 195   2            
 196   2          }
 197   1        
 198   1        
 199   1                    /*-------------------------------CMD de wiegand---------------------------------------------------*
             -/
 200   1          else if ((length_trama==6)&&(*buffer==STX)&&(*(buffer+1)=='W')&&*(buffer+(length_trama-1))==ETX)                
             -    /* cmd q comunica con monitor po wigan*/
 201   1          {
 202   2              /*-------------------------------se covierte el numero serie de la tarjeta----------------------------
             ---*/
 203   2                    ByteHex_Decimal(buff,*(buffer+2));                                                                        /*convierto el primer byte_he
             -x a decimal    */
 204   2                    buff[3]=' ';
 205   2                    Two_ByteHex_Decimal(buff+4,*(buffer+3),*(buffer+4)) ;                                                     /*convierto un byte
             - de 16 bits a decimal*/   
 206   2              /*----------------------------------------------------------------------------------------------------
             ---*/
 207   2              if (USE_LPR==1)
 208   2              {
 209   3                    /*-------------------------------mensaje en la pantalla--------------------------------------------
             --------*/
 210   3                    if (ValidaSensoresPaso()!= 0xff)
 211   3                    {               
 212   4                      PantallaLCD(ERROR_LOOP);
 213   4                      PantallaLCD_LINEA_2(LECTURA_WIEGAND,buff);                                                                /*msj rasberry*/
C51 COMPILER V9.59.0.0   ACCESCAN                                                          10/20/2021 16:01:04 PAGE 5   

 214   4                    }
 215   3                    else
 216   3                    {
 217   4                      Cmd_LPR_Salida_wiegand(buff);
 218   4                      PantallaLCD_LINEA_2(LECTURA_WIEGAND,buff);                                                                /*msj rasberry*/
 219   4                    }
 220   3                
 221   3              }                                                                             
 222   2              
 223   2              else
 224   2              {
 225   3                 /*-------------------------------mensaje en la pantalla---------------------------------------------
             -------*/
 226   3                                                                      /*convierto un byte de 16 bits a decimal*/                                                  
 227   3                    PantallaLCD_LINEA_2(LECTURA_WIEGAND,buff);                                                            /*transmito el codigo de la
             - tarjeta a la pantalla lcd*/
 228   3                                                                                                          
 229   3                /*---------------------------------------------------------------------------------------------------
             ------*/  
 230   3              
 231   3              }
 232   2          }
 233   1          else if ((length_trama==12)&&(*buffer==STX)&&*(buffer+(length_trama-1))==ETX)                                   /*graba e
             -l numero de consecutivo en eeprom*/
 234   1          {
 235   2            graba_serie_ascii_hex(buffer+1);
 236   2            
 237   2            
 238   2              Debug_txt_Tibbo((unsigned char *) "Grabacion Serie: ");                                                     /*trama recibida pto
             - paralelo */
 239   2              DebugBufferMF(buffer,length_trama,1);
 240   2              
 241   2            
 242   2          }
 243   1          /*apertura por access*/
 244   1          else if (*buffer==0XAB)
 245   1          { 
 246   2             PantallaLCD(GRACIA_SOFTWARE);
 247   2              ValTimeOutCom=TIME_PLACA;
 248   2              g_cEstadoImpresion=SEQ_CMNCCN_PTO ; 
 249   2              
 250   2          }
 251   1          
 252   1      }
 253          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    935    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
