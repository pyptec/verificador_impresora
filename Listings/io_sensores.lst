C51 COMPILER V9.59.0.0   IO_SENSORES                                                       01/20/2020 12:19:01 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IO_SENSORES
OBJECT MODULE PLACED IN .\Objects\io_sensores.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE io_sensores.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\vrfcdor_impresora
                    -) DEBUG OBJECTEXTEND PRINT(.\Listings\io_sensores.lst) TABS(2) OBJECT(.\Objects\io_sensores.obj)

line level    source

   1          
   2          #include <io_sensores.h>
   3          #include <reg51.h>
   4          
   5          /*funciones externas*/
   6          extern void Debug_txt_Tibbo(unsigned char * str);
   7          extern void load_and_send_info_reloj();
   8          extern void load_and_send_id_cod();
   9          extern void send_portERR(unsigned char cod_err);
  10          extern unsigned char rd_eeprom (unsigned char control,unsigned int Dir); 
  11          
  12          sbit DataIn = P1^1;         //      
  13          sbit sel_A = P3^5;          //Pulsador                        *
  14          sbit sel_B = P3^6;          //Entrada Sensor 2                    *
  15          sbit sel_C = P3^7;          //Entrada Sensor 1                    *
  16          sbit busy = P3^3;           /*bussy de Entrada Interrupcion del Procesador principal      */
  17          
  18          #define NO_TIFIQUE_EVP      'N'
  19          #define SI_NOTIFIQUE_EVP    'S'
  20          
  21          #define AUTOMOVIL           0X00
  22          #define MOTO                0X01
  23          extern bit COMPARACION_ACTIVA;
  24          extern  unsigned char Tipo_Vehiculo;
  25          //***************************************************************************************************
  26          void sel_Funcion(void)
  27          {
  28   1        sel_A=0;
  29   1        sel_B=0;
  30   1        sel_C=0;
  31   1      }
  32          //***************************************************************************************************
  33          void sel_Auto(void)
  34          {
  35   1        sel_A=0;
  36   1        sel_B=1;
  37   1        sel_C=0;
  38   1      }
  39          //***************************************************************************************************
  40          /*
  41          void sel_Pulsa(void)
  42          {
  43            sel_A=1;
  44            sel_B=1;
  45            sel_C=0;
  46          }
  47          */
  48          //***************************************************************************************************
  49          void sel_Sensor2(void)
  50          {
  51   1        sel_A=0;
  52   1        sel_B=0;
  53   1        sel_C=1;
  54   1      }
C51 COMPILER V9.59.0.0   IO_SENSORES                                                       01/20/2020 12:19:01 PAGE 2   

  55          //***************************************************************************************************
  56          void sel_Sensor1(void)
  57          {
  58   1        sel_A=1;
  59   1        sel_B=0;
  60   1        sel_C=1;
  61   1      }
  62          //***************************************************************************************************
  63          void sel_Dir1(void)
  64          {
  65   1        sel_A=0;
  66   1        sel_B=1;
  67   1        sel_C=1;
  68   1      }
  69          //***************************************************************************************************
  70          void sel_Dir2(void)
  71          {
  72   1        sel_A=1;
  73   1        sel_B=1;
  74   1        sel_C=1;
  75   1      }
  76          
  77          char ValidaSensor(void)
  78          {
  79   1        
  80   1      char  Valido=0;
  81   1      int Tmin=500;
  82   1        while ((DataIn==1)&&(Valido==0))
  83   1        {
  84   2          Tmin--;
  85   2          if (Tmin==0)
  86   2          {
  87   3             Valido=1;
  88   3          }
  89   2        }
  90   1        return Valido;
  91   1      }
  92          /*------------------------------------------------------------------------------
  93          Funcion q debuelve la direccion de la tarjeta
  94          ------------------------------------------------------------------------------*/
  95          unsigned char Dir_board()
  96          {
  97   1        char Board=0x31;
  98   1        
  99   1        sel_Dir1();
 100   1        if (DataIn==1)
 101   1        {
 102   2          Board++;
 103   2        }
 104   1        sel_Dir2();
 105   1        if (DataIn==1)
 106   1        {
 107   2          Board=Board+2;
 108   2        }
 109   1        return (Board);
 110   1      }
 111          /*------------------------------------------------------------------------------
 112          Detecto la activacion de los sensores de salida
 113          ------------------------------------------------------------------------------*/
 114          
 115          unsigned char  ValidaSensoresPaso(void)
 116          {
C51 COMPILER V9.59.0.0   IO_SENSORES                                                       01/20/2020 12:19:01 PAGE 3   

 117   1       
 118   1          sel_Sensor2();                                //garantiso q la barrera se encuentre en posicion baja  
 119   1            if ((DataIn==1))        
 120   1          {  
 121   2            if (ValidaSensor()==1)
 122   2            {
 123   3            sel_Sensor1();  
 124   3              if (DataIn==0)                            // sensor1  se encuentra activo puede ser carro, si esta inhabilitado debe
             - ser moto          
 125   3              {  sel_Auto();
 126   4                if (DataIn==0)
 127   4                {                                         // sensor Auto activo es un carro 
 128   5                   Debug_txt_Tibbo((unsigned char *) "Sensores Auto y sensor1 activos.");
 129   5                   Tipo_Vehiculo=AUTOMOVIL;
 130   5                    return 0xff;
 131   5                  
 132   5                }
 133   4                else
 134   4                  {
 135   5                    Debug_txt_Tibbo((unsigned char *) "Sensor activo sensor1 .");
 136   5                    Tipo_Vehiculo=MOTO;
 137   5                    return 0xff ;
 138   5                  }
 139   4                  
 140   4                  
 141   4              }
 142   3              else
 143   3              {   sel_Auto();
 144   4                if (DataIn==0)
 145   4                {
 146   5                
 147   5                Debug_txt_Tibbo((unsigned char *) "Detectado. Sensor Auto.");
 148   5                  Tipo_Vehiculo=MOTO;
 149   5                  return 0xff;  
 150   5                }
 151   4                else
 152   4                {
 153   5                  Debug_txt_Tibbo((unsigned char *) "Sensores no detectados");
 154   5                  return 0x00;  
 155   5                }
 156   4                  
 157   4      
 158   4              }
 159   3            }
 160   2            else 
 161   2            {
 162   3              Debug_txt_Tibbo((unsigned char *) "Vehiculo Esperando Salir.");
 163   3              return 0x00;
 164   3            }
 165   2          }else 
 166   1          {
 167   2          Debug_txt_Tibbo((unsigned char *) "Vehiculo Saliendo. Un momento");
 168   2          return 0x00;
 169   2          }
 170   1      
 171   1      }
 172          
 173          
 174          /*------------------------------------------------------------------------------
 175          funcion de msj en lcd de informacion
 176          toggle=0    envia por el pto paralelo STX, cmd (i), año, mes, dia, hora, minutos, seg, dia de la semana, ETX
 177          toggle=1    
C51 COMPILER V9.59.0.0   IO_SENSORES                                                       01/20/2020 12:19:01 PAGE 4   

 178          toggle=2    envia ID y COD_PARK   por el pto paralelo STX, cmd (D), ID_CLIENTE, COD_CLIENTE, ETX  
 179          ------------------------------------------------------------------------------*/
 180           void msj_lcd_informativo()
 181           {
 182   1       unsigned char toggle, info;
 183   1       
 184   1       
 185   1            sel_Funcion();                                  /*el pulsador funcion es el cmd q visualiza tres */
 186   1          if (DataIn==0)
 187   1          {
 188   2             if ((toggle==0)&&(info==0))
 189   2            {
 190   3             if (busy==1)
 191   3              {
 192   4                info=1;
 193   4                load_and_send_info_reloj();               /*se envia el reloj al lcd */
 194   4                toggle=1;
 195   4              }
 196   3             }    
 197   2              else if((toggle==1)&&(info==0))
 198   2              {
 199   3                if (busy==1)
 200   3                {
 201   4                info=1;
 202   4                load_and_send_id_cod();
 203   4                toggle=2;
 204   4                }
 205   3              }
 206   2              else if ((toggle==2)&&(info==0))
 207   2              {
 208   3                if (busy==1)
 209   3                {
 210   4                info=1;
 211   4                  if(rd_eeprom(0xa8,0x0066)=='S')
 212   4                  {
 213   5                    send_portERR(SI_NOTIFIQUE_EVP);
 214   5                  }else {send_portERR(NO_TIFIQUE_EVP);}
 215   4                  
 216   4                toggle=0;
 217   4                }
 218   3              
 219   3              }
 220   2            
 221   2            }
 222   1          
 223   1          sel_Funcion();                  // el antirebote
 224   1          if (DataIn==1)
 225   1          {
 226   2            info=0;
 227   2          }
 228   1      
 229   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    317    ----
   CONSTANT SIZE    =    160    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.59.0.0   IO_SENSORES                                                       01/20/2020 12:19:01 PAGE 5   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
