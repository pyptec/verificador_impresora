C51 COMPILER V9.59.0.0   VERPRINT                                                          10/25/2021 16:12:58 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE VERPRINT
OBJECT MODULE PLACED IN .\Objects\verprint.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE verprint.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\vrfcdor_impresora) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\verprint.lst) TABS(2) OBJECT(.\Objects\verprint.obj)

line level    source

   1          #include <verprint.h>
   2          #include <string.h>
   3          #include <reg51.h>
   4          /*funciones prototipo externas */
   5          
   6          extern void Debug_txt_Tibbo(unsigned char * str);
   7          extern void DebugBufferMF(unsigned char *str,unsigned char num_char,char io);
   8          extern void Debug_chr_Tibbo(unsigned char Dat);
   9          extern void PantallaLCD(unsigned char cod_msg);
  10          extern void send_portERR(unsigned char cod_err);
  11          extern unsigned char  ValidaSensoresPaso(void);
  12          extern void clear_buffer();
  13          extern void Trama_print_cod_barras(unsigned char *msj,unsigned char vehiculo);
  14          extern void Cmd_LPR_Salida_print(unsigned char *msj,unsigned char vehiculo);
  15          extern void Block_read_Clock_Hex(unsigned char *datos_clock);
  16          
  17          
  18          /*variables externas*/
  19          extern unsigned char g_cEstadoComSoft;
  20          extern unsigned char g_cEstadoImpresion;
  21          extern unsigned char ValTimeOutCom;
  22          extern unsigned char buffer_ready;
  23          extern idata unsigned char rbuf [];
  24          extern  unsigned char g_cContByteRx;
  25          extern  unsigned char  USE_LPR;
  26          extern unsigned char Timer_wait;
  27          
  28          sbit lock = P1^7;           //Relevo 
  29          /*----------------------------------------------------------------------------
  30          tiempo de delay entre funciones
  31          ------------------------------------------------------------------------------*/
  32          
  33          #define   TIME_CARD         20    //50
  34          #define   TIME_RX           200   //
  35          #define   TIME_PLACA        55
  36          #define   TIME_PULSADOR     3
  37          
  38          /*----------------------------------------------------------------------------
  39          definicion de recepcion serial 
  40          ------------------------------------------------------------------------------*/
  41          
  42          #define  ESPERA_RX          0           //espera el primer cmd de recepcion del verificado 
  43          /*----------------------------------------------------------------------------
  44          Definiciones de sequencias de lectura de ticket 
  45          ------------------------------------------------------------------------------*/
  46          
  47          #define SEQ_INICIO            0X00  
  48          #define SEQ_LEECODIGO         0X01
  49          #define SEQ_SEND_SOFT         0X02
  50          #define SEQ_SEND_SOFT_QR      0x03
  51          #define SEQ_CMNCCN_PTO        0X04
  52          #define SEQ_REINTENTO         0X05
  53          /*---------------------------------------------------------------------------------
  54          definiciones de la pantalla
C51 COMPILER V9.59.0.0   VERPRINT                                                          10/25/2021 16:12:58 PAGE 2   

  55          -----------------------------------------------------------------------------------*/
  56          #define INGRESO                 0xFA
  57          #define BIENVENIDO              0XFE
  58          #define AUDIO_IN                0XA0    // RELE 1
  59          #define AUDIO_ENTER             0XA1    // RELE 2
  60          #define GRACIAS                 0XFF
  61          
  62          
  63          #define True                    0x01
  64          #define False                   0x00
  65          /*---------------------------------------------------------------------------------
  66          funcion que debuelve la posicion del inicio del primer caracter de numerico de 0 a 9
  67          -----------------------------------------------------------------------------------*/
  68          unsigned char num_num(unsigned char * p)  
  69          {
  70   1      unsigned char contador=0;
  71   1        while ((*p < 0x30)|| (*p > 0x39))
  72   1        {
  73   2          
  74   2          p++;
  75   2          contador++;
  76   2        }
  77   1        return contador;
  78   1      }   
  79          /*---------------------------------------------------------------------------------
  80          definiciones de la pantalla
  81          -----------------------------------------------------------------------------------*/
  82          unsigned char num_char(unsigned char * p,unsigned char chr) 
  83          {
  84   1      unsigned char contador=0;
  85   1        while (*p !=chr)
  86   1        {
  87   2          
  88   2          p++;
  89   2          contador++;
  90   2        }
  91   1        return contador;
  92   1      } 
  93          unsigned char check_fechaOut_2(unsigned char *buffer)
  94          {
  95   1        unsigned long int fecha_inicio,fecha_fin;
  96   1        unsigned char datos_clk[6];
  97   1        char temp;
  98   1        
  99   1        
 100   1          Block_read_Clock_Hex(datos_clk);                              /*leo el clock actual*/
 101   1          fecha_inicio =  datos_clk[0] * 365 + datos_clk[1] * 30 + datos_clk[2] ;
 102   1          fecha_fin = *(buffer ) * 365 + *(buffer + 1) * 30  + *(buffer + 2);
 103   1          
 104   1            
 105   1          if (fecha_fin >= fecha_inicio )           
 106   1          {
 107   2            temp = True;
 108   2          }
 109   1          else
 110   1          {
 111   2            temp = False;
 112   2          }
 113   1            
 114   1      
 115   1        
 116   1        return temp;
C51 COMPILER V9.59.0.0   VERPRINT                                                          10/25/2021 16:12:58 PAGE 3   

 117   1      }
 118          /*--------------------------------------------------------------------------------------------------------
             ------------------
 119          procedimiento que lee el codigo de barra o el QR
 120          SEQ_INICIO=00 se detecta la presencia vehicular 
 121          SEQ_QUEST_PRINT=1 si fue  presionado el boton 
 122          ----------------------------------------------------------------------------------------------------------
             ------------------*/
 123          
 124          void Lee_ticket(void)
 125          {
 126   1        static unsigned char paso_una_vez=0;
 127   1        static unsigned char Ticket[10];
 128   1        static unsigned char fecha[11];
 129   1        unsigned char temp,temp2,vehiculo;
 130   1        unsigned char *tipo_vehiculo;
 131   1        switch (g_cEstadoImpresion)
 132   1        {
 133   2          case SEQ_INICIO:
 134   2          /*detecta el vehiculo en el loop*/
 135   2            
 136   2          if (ValTimeOutCom==1)                                                                 /*tiempo de espera */
 137   2          {
 138   3            lock=0;
 139   3            
 140   3            if (ValidaSensoresPaso()!=0)                                                        /*pregunto q alla presencia vehicular*/
 141   3            {
 142   4              Debug_txt_Tibbo((unsigned char *) "\r\n\Vehiculo en el loop\r\n");                  /* se encuentra un sensor a
             -ctivo*/
 143   4              PantallaLCD(BIENVENIDO);                                                          /*msj acerque el ticket*/
 144   4              if(paso_una_vez==0)
 145   4              {
 146   5              send_portERR(AUDIO_IN);                                                           /*habilito el audio de entrada*/
 147   5              paso_una_vez=1;
 148   5              }                           
 149   4              ValTimeOutCom=TIME_RX;
 150   4              g_cEstadoImpresion=SEQ_LEECODIGO;                                                   /*volvemos a preguntar  */  
 151   4                    
 152   4              
 153   4            
 154   4            }
 155   3            else
 156   3              {
 157   4              Debug_txt_Tibbo((unsigned char *) "Vehiculo no en el loop\r\n\r\n");              /* no hay vehiculo en el lo
             -op*/
 158   4              paso_una_vez=0;                                               
 159   4              ValTimeOutCom=TIME_PULSADOR;
 160   4              g_cEstadoImpresion=SEQ_INICIO;                                                    /*volvemos a preguntar  */  
 161   4                    
 162   4              }
 163   3          }
 164   2          break;
 165   2      /*--------------------------------------------------------------------------------------------------------
             ------------------------------------
 166   2      SEQ_LEECODIGO 
 167   2      lee el dato en el pto serial del codigo qr
 168   2      ----------------------------------------------------------------------------------------------------------
             -------------------------------------*/    
 169   2          case SEQ_LEECODIGO:
 170   2            if ((ValTimeOutCom == 1)||(buffer_ready != 0))
 171   2            {
 172   3              if (buffer_ready == 1)
C51 COMPILER V9.59.0.0   VERPRINT                                                          10/25/2021 16:12:58 PAGE 4   

 173   3              {
 174   4                /*trama con codigo QR*/
 175   4                Debug_txt_Tibbo((unsigned char *) "trama del lector datalogic cod QR");             /*la respuesta es desco
             -nocida*/
 176   4                Debug_txt_Tibbo(rbuf);                                                              /*imprimo la trama recibida*/
 177   4                Debug_txt_Tibbo((unsigned char *) "\r\n");
 178   4                ValTimeOutCom=TIME_CARD;                                            
 179   4                g_cEstadoImpresion=SEQ_SEND_SOFT_QR ;   
 180   4                                                                                                    /* buffer del pto serie (0) inicia a esperar la trama*/
 181   4               
 182   4              }
 183   3              else if (buffer_ready == 2)
 184   3              {
 185   4                /*codigo de barras*/
 186   4                strcpy(Ticket,rbuf);                                                                /*salvo el buffer*/
 187   4                temp=strlen(rbuf);                                                                  /*longitud del buffer*/
 188   4                Ticket[temp-1]=0;
 189   4                if (temp>10)
 190   4                {
 191   5                clear_buffer();
 192   5                PantallaLCD(BIENVENIDO);
 193   5                ValTimeOutCom=TIME_RX;
 194   5                g_cEstadoImpresion=SEQ_LEECODIGO; 
 195   5                break;
 196   5                }
 197   4                /*COD DE BARRAS*/ 
 198   4                Debug_txt_Tibbo((unsigned char *) "trama del lector datalogic cod barras");           /*la respuesta es de
             -sconocida*/
 199   4                Debug_txt_Tibbo(Ticket);                                                                /*imprimo la trama recibida*/
 200   4                Debug_txt_Tibbo((unsigned char *) "\r\n");
 201   4                                                          
 202   4              
 203   4                                                                                        /* buffer del pto serie (0) inicia a esperar la trama*/
 204   4                
 205   4                g_cEstadoImpresion=SEQ_SEND_SOFT  ;   
 206   4              }
 207   3              else
 208   3              {
 209   4                /*respuesta incorrecta limpia buffer lee otra vez*/
 210   4                clear_buffer();
 211   4                paso_una_vez=0;
 212   4                buffer_ready=0;   
 213   4                Debug_txt_Tibbo((unsigned char *) "trama del lector datalogic no esta completa\r\n");             /*la resp
             -uesta es desconocida*/
 214   4                ValTimeOutCom=TIME_PULSADOR;
 215   4                g_cEstadoImpresion=SEQ_INICIO;  
 216   4                }
 217   3                      
 218   3            
 219   3              
 220   3            } 
 221   2          break;
 222   2          case SEQ_SEND_SOFT:
 223   2            
 224   2              /*codigo de barras*/
 225   2              Debug_txt_Tibbo((unsigned char *) "cod barras");  
 226   2              buffer_ready=0; 
 227   2              vehiculo='C';
 228   2              Trama_print_cod_barras(Ticket,vehiculo);
 229   2          
 230   2            if(USE_LPR)
 231   2              {
C51 COMPILER V9.59.0.0   VERPRINT                                                          10/25/2021 16:12:58 PAGE 5   

 232   3              Cmd_LPR_Salida_print(Ticket,vehiculo);                                                /*envio datos a Monitor*/
 233   3              }
 234   2              ValTimeOutCom=TIME_PLACA;
 235   2              g_cEstadoImpresion=SEQ_CMNCCN_PTO ;   
 236   2            
 237   2            
 238   2            break;
 239   2            
 240   2          case  SEQ_SEND_SOFT_QR:
 241   2            /*es un codigo QR*/
 242   2            //  ES = 0;                             /*inactivo pto serie y analizo el dato*/
 243   2            if (ValTimeOutCom==1)
 244   2            {
 245   3          
 246   3              Debug_txt_Tibbo((unsigned char *) "cod QR r\n");
 247   3              /*codigo qr*/
 248   3              buffer_ready=0;                     /*limpio el testigo de recepcion de datos serie*/
 249   3              
 250   3              temp=num_num(rbuf);                 /*funcion que pregunta donde empieza el primer numero del ticket*/
 251   3              temp2=num_char(rbuf+temp,'>');      /*busca un caracter en la trama*/
 252   3              if ((tipo_vehiculo=strstr(rbuf,"Carro"))!= 0) /*pregunto el tipo de vehiculo grabado en el codigo QR*/
 253   3                {
 254   4                vehiculo='C';
 255   4                }
 256   3              else
 257   3                {
 258   4                vehiculo='M';
 259   4                }
 260   3              Debug_txt_Tibbo((unsigned char *) "tipo de vehiculo: ");            /*msj tipo de vehiculo */
 261   3              Debug_chr_Tibbo(vehiculo);                                          /*caracter del tipo de vehiculo*/
 262   3              Debug_txt_Tibbo((unsigned char *) "\r\n");                          /*final de linea*/
 263   3              
 264   3              Debug_txt_Tibbo((unsigned char *) "longitud de la trama: \r\n");    /*msj longitud de la trama */
 265   3              Debug_chr_Tibbo(temp);                                              /*numero de inicio del ticket*/
 266   3              Debug_txt_Tibbo((unsigned char *) "\r\n");                          /*final de linea*/                          
 267   3              Debug_chr_Tibbo(temp2);                                             /*numero de caracteres del ticket*/
 268   3              Debug_txt_Tibbo((unsigned char *) "\r\n");                          /*final de linea*/
 269   3             
 270   3              Ticket[0]=0;
 271   3              if(temp== 0x0c)                                                     /*la trama debe iniciar en 0x0c*/
 272   3              { 
 273   4              strncpy(Ticket,rbuf+temp,temp2);                                    /*copio el numero de ticket*/
 274   4              Ticket[temp2]=0;                                                    /*finalizo la trama con (0)*/
 275   4                      
 276   4              Debug_txt_Tibbo(Ticket);                                            /*imprimo el numero de ticket*/
 277   4              Debug_txt_Tibbo((unsigned char *) "\r\n");                          /*final de linea*/
 278   4              
 279   4              /*buscamos la fecha en el ticket*/
 280   4                temp=num_char(rbuf+temp2,':');
 281   4                temp2=num_char(rbuf+temp,'>');
 282   4                strncpy(fecha,rbuf+temp+2,temp2);
 283   4      
 284   4              Debug_txt_Tibbo((unsigned char *) "Fecha de salida: ");           /*msj tipo de vehiculo */
 285   4              Debug_txt_Tibbo((unsigned char *)fecha);                                          /*caracter del tipo de vehiculo*/
 286   4              Debug_txt_Tibbo((unsigned char *) "\n");                          /*final de linea*/          
 287   4                
 288   4              Trama_print_cod_barras(Ticket,vehiculo);                            /*envio la trama al pto paralelo y es enviada al
             - principal el cual comunica con acces*/
 289   4              
 290   4              
 291   4              if(USE_LPR)
 292   4              {
C51 COMPILER V9.59.0.0   VERPRINT                                                          10/25/2021 16:12:58 PAGE 6   

 293   5              Cmd_LPR_Salida_print(Ticket,vehiculo);                                /*envio datos a Monitor*/
 294   5              }
 295   4              ValTimeOutCom=TIME_PLACA;
 296   4              g_cEstadoImpresion=SEQ_CMNCCN_PTO ; 
 297   4              break;
 298   4              }
 299   3              else
 300   3              {
 301   4                ES = 1;
 302   4                clear_buffer();
 303   4              //  PantallaLCD(BIENVENIDO);
 304   4                //send_portERR(TARJETA_INVALIDA);  
 305   4                ValTimeOutCom=TIME_RX;
 306   4                g_cEstadoImpresion=SEQ_LEECODIGO;   
 307   4              
 308   4              }
 309   3            }
 310   2                break;
 311   2          case SEQ_CMNCCN_PTO:
 312   2            if (ValTimeOutCom==1)
 313   2            {
 314   3              ES = 1;                                                                             /*habilito pto*/
 315   3              Debug_txt_Tibbo((unsigned char *) "fin de lectura de trama\r\n");                   /*la respuesta es desconoci
             -da*/
 316   3              //PantallaLCD(GRACIAS);
 317   3              ValTimeOutCom=TIME_PULSADOR;
 318   3              clear_buffer();
 319   3              paso_una_vez=0;      
 320   3              g_cEstadoImpresion=SEQ_INICIO;
 321   3            }
 322   2            break;
 323   2          default:
 324   2          g_cEstadoImpresion=SEQ_INICIO;
 325   2          break;
 326   2        
 327   2          case SEQ_REINTENTO:
 328   2            if (ValTimeOutCom==1)
 329   2            {
 330   3              Debug_txt_Tibbo((unsigned char *) "REENVIA TRAMA PTO PARALELO\r\n ");           /*msj tipo de vehiculo */
 331   3              
 332   3              Trama_print_cod_barras(Ticket,vehiculo);  
 333   3              ValTimeOutCom=TIME_PLACA;
 334   3              g_cEstadoImpresion=SEQ_CMNCCN_PTO ; 
 335   3            }
 336   2              break;    
 337   2        }
 338   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1078    ----
   CONSTANT SIZE    =    319    ----
   XDATA SIZE       =     22      24
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
