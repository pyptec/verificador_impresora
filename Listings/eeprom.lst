C51 COMPILER V9.59.0.0   EEPROM                                                            10/06/2021 15:40:48 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE eeprom.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\vrfcdor_impresora) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\eeprom.lst) TABS(2) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          
   2          #include <eeprom.h>
   3          #include <reg51.h>
   4          #include <string.h>
   5          /*funciones externas*/
   6          
   7          extern void          _nop_     (void);
   8          extern void Delay (void);
   9          extern void Delay_20us(unsigned int cnt);
  10          extern void Delay_1ms(unsigned int cnt);
  11          
  12          extern void Debug_Dividir_texto();
  13          extern void Debug_txt_Tibbo(unsigned char * str);
  14          extern void Debug_chr_Tibbo(unsigned char Dat);
  15          //******************************************************************************************
  16          //    RUTINAS DE EEPROM 24FC1025
  17          //******************************************************************************************
  18          sbit sda = P1^2;
  19          sbit scl = P1^3;
  20          //******************************************************************************************
  21          
  22          bit memory_flag;
  23          unsigned char byte_rd;
  24          unsigned char l_data_eeprom;
  25          unsigned char l_chr;
  26          
  27          /*define posiciones de memoria*/
  28          #define EE_ID_CLIENTE   0x0000
  29          
  30          
  31          //*******************************************************************************************
  32          void ackd(void)
  33          {
  34   1        unsigned int i;
  35   1        memory_flag=1;
  36   1        scl=1;
  37   1        sda=1;
  38   1        for (i=0; i<1100; i++)             //500
  39   1        {
  40   2          if (sda==0)
  41   2          {
  42   3            memory_flag=0;
  43   3          scl=0;
  44   3      
  45   3          break;
  46   3          }
  47   2        }
  48   1        
  49   1        if (memory_flag==1)
  50   1        { 
  51   2      
  52   2        }  
  53   1      } 
  54          //*******************************************************************************************
C51 COMPILER V9.59.0.0   EEPROM                                                            10/06/2021 15:40:48 PAGE 2   

  55          //*******************************************************************************************
  56          void ack_lect(void)
  57          {
  58   1        int i;
  59   1        scl=1;
  60   1        sda=1;
  61   1        memory_flag=1;
  62   1        for (i=0; i<650; i++)
  63   1        {
  64   2          if (sda==0)
  65   2          {
  66   3            memory_flag=0;
  67   3          scl=0;
  68   3          break;
  69   3          }
  70   2        }
  71   1      } 
  72          //*******************************************************************************************
  73          void p_me (void)
  74          {
  75   1          scl=1;
  76   1          _nop_();
  77   1          scl=0;
  78   1      }
  79          //*******************************************************************************************
  80          void e_d_m (unsigned char a_serial_eeprom)
  81          {
  82   1        unsigned char nbits;
  83   1          for (nbits=0; nbits<8; nbits++)
  84   1        {
  85   2          a_serial_eeprom <<=1;
  86   2          if (CY==1)
  87   2          { 
  88   3            sda=1;
  89   3          }
  90   2          else
  91   2          {
  92   3            sda=0;
  93   3          }
  94   2          scl=1;
  95   2          p_me();         
  96   2        }
  97   1        return;
  98   1      }
  99          //********************************************************************************************
 100          void start (void)
 101          {
 102   1        sda=1;
 103   1        scl=1;
 104   1        _nop_();
 105   1        sda=0;
 106   1        scl=0;
 107   1        return;
 108   1      }
 109          //*******************************************************************************************
 110          void stop (void)
 111          {
 112   1        scl=0;
 113   1        sda=0;
 114   1        scl=1;
 115   1        sda=1;
 116   1        return;
C51 COMPILER V9.59.0.0   EEPROM                                                            10/06/2021 15:40:48 PAGE 3   

 117   1      }
 118          //*******************************************************************************************
 119          unsigned char l_d_m (void)
 120          {
 121   1        unsigned char nbits;
 122   1          for (nbits=0; nbits<8; nbits++)
 123   1        {
 124   2          scl=0;
 125   2            if (sda==1) 
 126   2            {
 127   3            l_data_eeprom = l_data_eeprom| 0x01;
 128   3            if (nbits<=6) 
 129   3            {
 130   4              l_data_eeprom<<=1;
 131   4              scl=1;
 132   4            }
 133   3            }
 134   2            if (sda==0)
 135   2            {
 136   3              l_data_eeprom = l_data_eeprom & 0xFE;
 137   3            if (nbits<=6) 
 138   3            {
 139   4                l_data_eeprom <<=1;
 140   4              scl=1;
 141   4            }
 142   3            }
 143   2          }
 144   1        scl=0;
 145   1        return l_data_eeprom;
 146   1      }
 147          //*******************************************************************************************
 148          //*******************************************************************************************
 149          //  ESCRIBE EN EEPROM                                   *
 150          //*******************************************************************************************
 151          //void wr_eeprom (unsigned char control,unsigned char dir_h,unsigned char dir_l,unsigned char data_eeprom)
 152          void wr_eeprom (unsigned char control,unsigned int Dir, unsigned char data_eeprom)
 153          {
 154   1        unsigned char dir_h, dir_l;
 155   1        dir_l=Dir;
 156   1        Dir>>=8;
 157   1        dir_h=Dir;
 158   1      
 159   1      
 160   1        scl=0;
 161   1        sda=0;
 162   1      //  wait();
 163   1          start();
 164   1        e_d_m(control);
 165   1        ackd();
 166   1        e_d_m(dir_h);
 167   1        ackd();
 168   1        e_d_m(dir_l);
 169   1        ackd();
 170   1        e_d_m(data_eeprom);
 171   1        ackd();
 172   1        stop();
 173   1        Delay_1ms(13);
 174   1        
 175   1        scl=1;
 176   1        sda=1;
 177   1        Delay_20us(98);                   /*wait long*/
 178   1        Delay_20us(98);
C51 COMPILER V9.59.0.0   EEPROM                                                            10/06/2021 15:40:48 PAGE 4   

 179   1      }
 180          /*------------------------------------------------------------------------------
 181            ESCRIBE EN EEPROM n caracteres     pasados en un apuntador                              
 182          ------------------------------------------------------------------------------*/
 183          /*
 184          void wrpage_eeprom (unsigned char control,unsigned int Dir,unsigned char *data_eeprom)  
 185          {
 186            unsigned int j;
 187            unsigned char dir_h, dir_l,num_chr;
 188            dir_l=Dir;
 189            //Dir>>=8;
 190            dir_h=Dir >>8;
 191            num_chr=strlen(data_eeprom);
 192            Debug_Dividir_texto();  
 193            Debug_txt_Tibbo(data_eeprom)  ;
 194            Debug_chr_Tibbo(num_chr);
 195            Debug_Dividir_texto();      
 196            scl=0;
 197            sda=0;
 198            //wait();
 199            Delay_20us(98);
 200            Delay_20us(98);
 201            //wait();
 202          
 203              start();
 204            e_d_m(control);
 205            ackd();
 206            e_d_m(dir_h);
 207            ackd();
 208            e_d_m(dir_l);
 209            ackd();
 210            for (j=0; j<=num_chr; j++)
 211            {
 212              e_d_m(*data_eeprom);
 213              data_eeprom++;
 214              ackd();
 215            }
 216            stop();
 217            Delay_1ms(13);
 218            scl=1;
 219            sda=1;
 220           
 221          }   
 222          */
 223          //******************************************************************************************* 
 224          //******************************************************************************************* 
 225          //  LEE EN EEPROM                                     *
 226          //*******************************************************************************************
 227          
 228          unsigned char rd_eeprom (unsigned char control,unsigned int Dir) 
 229          {
 230   1      
 231   1        unsigned char dir_h, dir_l;
 232   1        dir_l=Dir;
 233   1        Dir>>=8;
 234   1        dir_h=Dir;
 235   1        
 236   1        scl=0;
 237   1        sda=0;
 238   1       // wait();
 239   1        start();
 240   1        e_d_m(control);
C51 COMPILER V9.59.0.0   EEPROM                                                            10/06/2021 15:40:48 PAGE 5   

 241   1        ack_lect();
 242   1        e_d_m(dir_h);
 243   1          ack_lect();
 244   1        e_d_m(dir_l);
 245   1        ack_lect();
 246   1        start();
 247   1        e_d_m(control+0x01);
 248   1        ackd();
 249   1        scl=0;
 250   1        l_d_m();
 251   1        stop();
 252   1          scl=1;
 253   1        sda=1;
 254   1        return l_data_eeprom;
 255   1      }
 256          
 257          /*--------------------------------------------------------------------------------------------------------
             --------------------------------
 258          Rutina que lee la eeprom  en bloque 
 259          ----------------------------------------------------------------------------------------------------------
             -------------------------------*/
 260          void LeerMemoria(unsigned int addres,unsigned char *res)
 261          {
 262   1        
 263   1      
 264   1      unsigned char i;
 265   1      do 
 266   1        {
 267   2        *res=rd_eeprom (0xa8,addres);
 268   2        i=*res;
 269   2        addres++;
 270   2        res++;
 271   2        }
 272   1        while(i !='\0');
 273   1        
 274   1      }
 275          /*--------------------------------------------------------------------------------------------------------
             --------------------------------
 276          escribe un bloque de datos en la eeprom
 277            Escribe hasta encontrar el CR y lo cambia por (0) que es el fin de la cadena
 278          ----------------------------------------------------------------------------------------------------------
             -------------------------------*/
 279          
 280          void EscribirMemoria(unsigned char control,unsigned int  addres,unsigned char  *res)
 281          {
 282   1      
 283   1      while(*res !='\0')                                  /**/
 284   1        {
 285   2          if(*res =='\r')
 286   2          {
 287   3            
 288   3            *res='\0';
 289   3          }  
 290   2          wr_eeprom(control,addres,*res);         
 291   2          addres++;
 292   2          res++;
 293   2        }
 294   1        *res=0;
 295   1        wr_eeprom(control,addres,*res); 
 296   1      }


C51 COMPILER V9.59.0.0   EEPROM                                                            10/06/2021 15:40:48 PAGE 6   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    554    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
